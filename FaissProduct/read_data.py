import faiss
import pickle

FAISS_INDEX_PATH = "faiss.index"
PRODUCT_IDS_PATH = "product_ids.pkl"
DELETED_IDS_PATH = "deleted_ids.pkl"

# ƒê·ªçc FAISS index
index = faiss.read_index(FAISS_INDEX_PATH)
print("FAISS index ntotal:", index.ntotal)

# ƒê·ªçc product_ids
with open(PRODUCT_IDS_PATH, "rb") as f:
    product_ids = pickle.load(f)

# ƒê·ªçc danh s√°ch ƒë√£ x√≥a
try:
    with open(DELETED_IDS_PATH, "rb") as f:
        deleted_ids = set(pickle.load(f))
except FileNotFoundError:
    deleted_ids = set()

print("Deleted IDs:", deleted_ids)

# In vector embedding c·ªßa nh·ªØng product ch∆∞a x√≥a
for i, pid in enumerate(product_ids):
    if pid in deleted_ids:   # b·ªè qua nh·ªØng product ƒë√£ b·ªã x√≥a
        continue

    vector = index.reconstruct(i)   # l·∫•y l·∫°i vector t·∫°i v·ªã tr√≠ i
    print(f"üîπ Product ID: {pid}")
    print(f"   Vector (first 10 dims): {vector[:10]}")  # in 10 gi√° tr·ªã ƒë·∫ßu ƒë·ªÉ d·ªÖ nh√¨n
    print(f"   Vector shape: {vector.shape}\n")
